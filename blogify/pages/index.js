import Head from "next/head";
import Blogpost from "../components/Blogpost";
import Footer from "../components/Footer";
import Header from "../components/Header";
import Newsletter from "../components/Newsletter";
import post from "../sanity-blogify/schemas/post";
import { client } from "../lib/client";
import { urlFor } from "../lib/client";
import { useEffect, useState } from "react";
import {
  getDoc,
  getDocs,
  collection,
  doc,
  setDoc,
  onSnapshot,
  deleteDoc,
} from "firebase/firestore";
import { db } from "../../firebase";
export default function Home({ posts }) {
  const [data, setData] = useState();
  const [newsList, setNewsList] = useState();
  const [title, setTitle] = useState();
  const [slug, setSlug] = useState();
  const [content, setContent] = useState();
  const [errorMessage, setError] = useState();
  // const getData = async () => {
  //   try {
  //     const ref = doc(db, "posts/new-post");
  //     const snap = await getDoc(ref);
  //     if (snap.exists()) {
  //       setData(snap.data());  
  //     }
  //   } catch (error) {
  //     setError(error.message);
  //   }
  // };


  // Get all data from firebase.❣️❣️🤩🤑
  // const getDatas = async () => {
  //   try {
  //     const ref = collection(db, "posts");
  //     const snap = await getDocs(ref);
  //     var newsList = []
  //     snap.docs.map((news)=>{
  //         newsList.push(news.data())
  //     })
  //     setNewsList(newsList);
  //   } catch (error) {
  //     setError(error.message);
  //   }
  // };

  const onDelete = async (slug)=>{
    const ref = doc(db, `posts/${slug}`)
    await deleteDoc(ref)
  }

  // Add data to fireabse🤩✨😎✨ 
  const setDataToFirestore = async () => {
    try {
      const jsonFIle = {
        title,
        content,
        slug,
      };
      const ref = doc(db, `posts/${slug}`);
      const snap = await setDoc(ref, jsonFIle);
    } catch (error) {
      setError(error.message);
    }
  };

  useEffect(() => {
    // getDatas();
    try {
      const ref = collection(db, "posts");
      const unsubcribe = onSnapshot(ref, (snap) => {
        var newsList = [];
        snap.docs.map((news) => {
          newsList.push(news.data());
        });
        setNewsList(newsList);
      });
      return () => unsubcribe();
    } catch (error) {
      setError(error.message);
    }
  }, []);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="flex max-w-full">
        <main>
          {/* testing place >>>>>>>>>>>>>>>>>>>>>>>>>*/}

          <span>title</span>
          <input
            onChange={(e) => {
              setTitle(e.target.value);
              setSlug(e.target.value.replaceAll(" ", "-"));
            }}
          />

          <span>content</span>
          <input onChange={(e) => setContent(e.target.value)} />
          <button onClick={() => setDataToFirestore()}>publish</button>
          <div>
            {newsList &&
              newsList.map((news) => {
                return (
                  <div className="p-2 border rounded-sm shadow">
                    <button onClick={()=>onDelete(news.slug)} className="px-4 py-2 text-white bg-red-800 border rounded-md shadow">Delete Me</button>
                    <h1 className="font-bold">{news.title}</h1>
                    <h1>{news.slug}</h1>
                    <h1>{news.content}</h1>
                  </div>
                );
              })}
          </div>
          {errorMessage && <h1>{errorMessage}</h1>}
          {/* testing place ??????????????????????????????*/}
          {/* <Header /> */}
          {/* <Blogpost posts={posts} />
          <Newsletter />
          <Footer /> */}
        </main>
      </div>
    </div>
  );
}

export const getServerSideProps = async () => {
  const query = '*[_type == "post"]';
  const posts = await client.fetch(query);
  return {
    props: { posts },
  };
};
